---
# Tasks for testing role

- name: run idempotence test
  hosts: localhost
  roles:
    - role: amtega.docker_presets
      docker_presets_images_json_query: >-
        [? starts_with(name, `centos-6`)
           || starts_with(name, `centos-7`)
           || starts_with(name, `fedora-27`)
           || starts_with(name, `fedora-28`) ]

    - role: amtega.docker_sandbox
      docker_sandbox_state: started
  tags:
    - sandbox

- name: test basic tomcat provisioning with cluster
  hosts: docker_sandbox_containers
  roles:
    - role: amtega.tomcat
  vars:
    tomcat_name: server1
    tomcat_version: 8.0.9
    tomcat_home: /opt/apache-tomcat-8.0.9
    tomcat_base: /srv/tomcat/server1
    tomcat_link: /opt/tomcat8
    tomcat_server_port: 8005
    tomcat_server_http_port: 8080
    tomcat_server_https_port: 8443
    tomcat_server_ajp_port: 8009
    tomcat_manager_addresses_allow:
      - 192.168.5.2
      - 192.168.5.3
    tomcat_manager_addresses_deny:
      - 192.168.5.13
      - 192.168.5.14
    tomcat_manager_hostnames_allow:
      - host1.acme.com
      - host2.acme.com
    tomcat_manager_hostnames_deny:
      - badhost1.acme.com
      - badhost2.acme.com
    tomcat_realm:
      className: org.apache.catalina.realm.LockOutRealm
    tomcat_subrealms:
      - className: org.apache.catalina.realm.UserDatabaseRealm
        resourceName: UserDatabase
    tomcat_cluster: yes
  tasks:
    - meta: flush_handlers

    - name: read subrealm config
      xml:
        path: "{{ tomcat_base }}/conf/server.xml"
        xpath: >-
          {{ "/Server/Service[@name='Catalina']/Engine[@name='Catalina']"
             + "/Realm/Realm" }}
        content: attribute
      register: subrealm_result

    - name: assert subrealm config matches inventory
      assert:
        that:
          - file.className == inventory.className | string
      vars:
        file: "{{ subrealm_result.matches[0].Realm }}"
        inventory: "{{ tomcat_subrealms[0] }}"

    # We don't check tomcat_server_port because native daemon doesn't use it

    - name: check that tomcat is listening
      wait_for:
        port: "{{ item}}"
        timeout: 10
      loop:
        - "{{ tomcat_server_http_port }}"
        - "{{ tomcat_server_ajp_port }}"

    - name: check that tomcat http port returns welcome page
      uri:
        url: "http://localhost:{{ tomcat_server_http_port }}"
        return_content: yes
      register: check_http_result
      failed_when: >-
         not check_http_result.content
             is search("successfully")
  tags:
    - idempotence

- name: test basic tomcat role without cluster
  hosts: docker_sandbox_containers
  roles:
    - role: amtega.tomcat
  vars:
    tomcat_name: server2
    tomcat_version: 8.0.9
    tomcat_home: /opt/apache-tomcat-8.0.9
    tomcat_base: /srv/tomcat/server2
    tomcat_link: /opt/tomcat8
    tomcat_server_port: 8006
    tomcat_server_http_port: 8081
    tomcat_server_https_port: 8444
    tomcat_server_ajp_port: 8010
    tomcat_cluster: yes
    tomcat_realm:
      className: org.apache.catalina.realm.LockOutRealm
    tomcat_subrealms:
      - className: org.apache.catalina.realm.UserDatabaseRealm
        resourceName: UserDatabase

  tasks:
    - meta: flush_handlers

    # We don't check tomcat_server_port because native daemon doesn't use it

    - name: check that tomcat is listening
      wait_for:
        port: "{{ item}}"
        timeout: 10
      loop:
        - "{{ tomcat_server_http_port }}"
        - "{{ tomcat_server_ajp_port }}"

    - name: check that tomcat http port returns welcome page
      uri:
        url: "http://localhost:{{ tomcat_server_http_port }}"
        return_content: yes
      register: check_http_result
      failed_when: >-
         not check_http_result.content
             is search("successfully")
  tags:
    - idempotence

- name: test basic tomcat role without native daemon
  hosts: docker_sandbox_containers
  roles:
    - role: amtega.tomcat
  vars:
    tomcat_name: server3
    tomcat_version: 7.0.88
    tomcat_home: /opt/apache-tomcat-7.0.88
    tomcat_base: /srv/tomcat/server3
    tomcat_use_native_daemon: no
    tomcat_use_native_apr_library: no
    tomcat_java_variables:
      var1: VAR1
      var2: VAR2
    tomcat_server_port: 8007
    tomcat_server_http_port: 8082
    tomcat_server_https_port: 8445
    tomcat_server_ajp_port: 8011
    tomcat_server_ajp_max_threads: 800
    tomcat_server_engine_jvm_route: tomcat-server-2
    tomcat_link: /opt/tomcat7
    tomcat_realm:
      className: org.apache.catalina.realm.LockOutRealm
    tomcat_subrealms:
      - className: org.apache.catalina.realm.UserDatabaseRealm
        resourceName: UserDatabase
  tasks:
    - meta: flush_handlers

    - name: check that tomcat is listening
      wait_for:
        port: "{{ item}}"
        timeout: 10
      loop:
        - "{{ tomcat_server_port }}"
        - "{{ tomcat_server_http_port }}"
        - "{{ tomcat_server_ajp_port }}"

    - name: check that tomcat http port returns welcome page
      uri:
        url: "http://localhost:{{ tomcat_server_http_port }}"
        return_content: yes
      register: check_http_result
      failed_when: >-
         not check_http_result.content
             is search("successfully")
  tags:
    - idempotence

- name: test basic tomcat role with custom artifact
  hosts: docker_sandbox_containers
  roles:
    - role: amtega.tomcat
  vars:
    tomcat_name: server4
    tomcat_version: 6.0.0
    tomcat_home: /opt/apache-tomcat-6.0.0
    tomcat_base: /srv/tomcat/server4
    tomcat_server_port: 8008
    tomcat_server_http_port: 8083
    tomcat_server_https_port: 8446
    tomcat_server_ajp_port: 8012
    tomcat_server_autodeploy: no
    tomcat_link: /opt/tomcat6
    tomcat_artifact:
      type: http
      host: http://archive.apache.org
      path: /dist/tomcat/tomcat-6/v6.0.0/bin
      file: apache-tomcat-6.0.0.tar.gz
      dest: /tmp
    tomcat_commons_daemon_download_url: >-
      http://archive.apache.org/dist/commons/daemon/source
    tomcat_realm:
      className: org.apache.catalina.realm.UserDatabaseRealm
      resourceName: UserDatabase
  tasks:
    - meta: flush_handlers

    # We don't check tomcat_server_port because native daemon doesn't use it

    - name: check that tomcat is listening
      wait_for:
        port: "{{ item}}"
        timeout: 10
      loop:
        - "{{ tomcat_server_http_port }}"
        - "{{ tomcat_server_ajp_port }}"

    - name: check that tomcat http port returns welcome page
      uri:
        url: "http://localhost:{{ tomcat_server_http_port }}"
        return_content: yes
      register: check_http_result
      failed_when: >-
         not check_http_result.content
             is search("successfully")
  tags:
    - idempotence

- name: test tomcat server removal
  hosts: docker_sandbox_containers
  roles:
    - role: amtega.tomcat
  vars:
    tomcat_name: server1
    tomcat_version: 8.0.9
    tomcat_home: /opt/apache-tomcat-8.0.9
    tomcat_base: /srv/tomcat/server1
    tomcat_link: /opt/tomcat8
    tomcat_state: absent
  tasks:
    - meta: flush_handlers

    - name: check server1 instance base dir
      find:
        paths: /srv/tomcat/server1
        file_type: directory
      register: check_server1_base_result

    - name: check server1 instance home dir
      find:
        path: /opt/apache-tomcat-8.0.9
        file_type: directory
      register: check_server1_home_result

    - name: check server1 instance base dir contains only preserved dir
      assert:
        that:
          - check_server1_base_result.files | length == 1
          - >-
            check_server1_base_result.files[0].path
            == "/srv/tomcat/server1/webapps"

    - name: check server1 instance home dir contains only preserved dir
      assert:
        that: check_server1_home_result.files | length == 0

- name: cleanup docker sandbox
  hosts: localhost
  roles:
    - role: amtega.docker_sandbox
      docker_sandbox_state: absent
  tags:
    - sandbox
    - cleanup
