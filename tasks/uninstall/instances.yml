---
# Uninstall instances

- block:
    - name: search tomcat files to uninstall
      find:
        paths:
          - "{{ tomcat_instance_base }}"
          - "{{ tomcat_instance_home }}"
        file_type: directory
        recurse: yes
      when: tomcat_instance_state == "absent"
      register: tomcat_uninstall_search_result

    - name: uninstall tomcat files
      file:
        path: "{{ item }}"
        state: absent
      when: item is not tomcat_startswith(exclusions)
      loop: "{{ files }}"
      vars:
        files: >-
          {{ tomcat_uninstall_search_result.files
             | map(attribute="path")
             | list }}
        exclusions: "{{ lookup('template', 'exclusions.yml.j2') | from_yaml }}"

    - name: remove tomcat base directory if possible
      shell: "rmdir {{ tomcat_instance_base }}"
      args:
        warn: false
      register: tomcat_uninstall_instances_remove_base_result
      failed_when: false
      changed_when: tomcat_uninstall_instances_remove_base_result.rc == 0

    - name: remove tomcat home directory if possible
      shell: "rmdir {{ tomcat_instance_home }}"
      args:
        warn: false
      register: tomcat_uninstall_instances_remove_home_result
      failed_when: false
      changed_when: tomcat_uninstall_instances_remove_home_result.rc == 0

    - name: remove tomcat instance home symlink
      file:
        path: "{{ tomcat_instance_home_link }}"
        state: absent
      when: tomcat_instance_home_link is defined

    - name: remove tomcat instance base symlink
      file:
        path: "{{ tomcat_instance_base_link }}"
        state: absent
      when: tomcat_instance_base_link is defined

    - name: remove tomcat server package if possible
      file:
        path: "{{ tomcat_package }}"
        state: absent
  when: tomcat_instance_state == "absent"
  tags:
    - role::tomcat
    - role::tomcat::uninstall
    - role::tomcat::uninstall::instances
