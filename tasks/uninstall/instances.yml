---
# Uninstall instances

- block:
    - name: search files to uninstall within tomcat instances base directory
      find:
        paths: "{{ instance.base }}"
        file_type: directory
        recurse: yes
      register: tomcat_uninstall_instances_search_result
      loop: "{{ tomcat_instances_state_absent }}"
      loop_control:
        loop_var: instance
        label: "{{ instance.name }}"

    - name: uninstall instance files in base directory tree
      file:
        path: "{{ item }}"
        state: absent
      when: item is not tomcat_startswith(exclusions)
      loop: "{{ files }}"
      vars:
        files: >-
          {{ tomcat_uninstall_instances_search_result.results
             | map(attribute="files")
             | sum(start=[])
             | map(attribute="path")
             | list }}
        exclusions: "{{ lookup('template', 'exclusions.yml.j2') | from_yaml }}"

    - name: remove instance base directory if possible
      shell: "rmdir {{ instance.base }}"
      args:
        warn: false
      register: tomcat_uninstall_instances_remove_base_result
      failed_when: false
      changed_when: tomcat_uninstall_instances_remove_base_result.rc == 0
      loop: "{{ tomcat_instances_state_absent }}"
      loop_control:
        loop_var: instance
        label: "{{ instance.name }}"

    - name: remove tomcat instance home if possible
      file:
        path: "{{ instance.home }}"
        state: absent
      when: instance.home not in lookup("template", "homes.yml.j2") | from_yaml
      loop: "{{ tomcat_instances_state_absent }}"
      loop_control:
        loop_var: instance
        label: "{{ instance.name }}"

    - name: remove tomcat instance home symlink
      file:
        path: "{{ instance.home_link }}"
        state: absent
      when: instance.home_link is defined
      loop: "{{ tomcat_instances_state_absent }}"
      loop_control:
        loop_var: instance
        label: "{{ instance.name }}"

    - name: remove tomcat instance base symlink
      file:
        path: "{{ instance.base_link }}"
        state: absent
      when: instance.base_link is defined
      loop: "{{ tomcat_instances_state_absent }}"
      loop_control:
        loop_var: instance
        label: "{{ instance.name }}"

    - name: remove tomcat server tarball if possible
      file:
        path: "{{ downloaded_tarball }}"
        state: absent
      when: >-
        (tomcat_instances_state_present + tomcat_instances_state_started)
        | selectattr('version', 'equalto', instance.version)
        | list
        | length == 0
      loop: "{{ tomcat_instances_state_absent }}"
      loop_control:
        loop_var: instance
        label: "{{ instance.name }}"
      vars:
        dist_tarball: >-
          {{ "apache-tomcat-"
             ~ instance.version
             ~ ".tar.gz" }}
        downloaded_tarball: >-
          {{ instance.download_dir
             | default(tomcat_instance_download_dir)
             + "/"
             + dist_tarball }}
  tags:
    - role::tomcat
    - role::tomcat::uninstall
    - role::tomcat::uninstall::instances
