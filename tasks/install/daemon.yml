---
# Commons Daemon install tasks

- block:
    - name: remove native daemon binary
      file:
        path: "{{ daemon_bin }}"
        state: absent
      when: >-
        tomcat_instance_force_install
        or (ansible_local_facts is defined
            and (tomcat_instance_use_native_daemon
                 != ansible_local_facts.use_native_daemon
                 or tomcat_instance_java_home
                    != ansible_local_facts.java_home))
      register: tomcat_daemon_remove_result
      vars:
        ansible_local_facts: >-
          {{ ansible_local["tomcat_" + tomcat_instance_name] }}

    - name: extract native daemon package
      unarchive:
        src: "{{ daemon_package }}"
        dest: "{{ tomcat_instance_home }}/bin"
        copy: no
        owner: "{{ tomcat_instance_user) }}"
        group: "{{ tomcat_instance_group) }}"
        mode: "{{ tomcat_files_permissions }}"
        list_files: true
        creates: "{{ daemon_bin }}"
      register: tomcat_daemon_extract_package_result

    - block:
        - name: configure native daemon compilation
          shell: >-
            ./configure
            --with-java={{ tomcat_instance_java_home }}
          args:
            chdir: "{{ daemon_src_dir }}"
            creates: "{{ daemon_bin }}"
          loop_control:
            loop_var: instance
            index_var: index
            label: "{{ tomcat_instance_name }}"

        - name: compile native daemon
          shell: make
          args:
            chdir: "{{ daemon_src_dir }}"
            creates: "{{ daemon_bin }}"

        - name: install native daemon binary
          shell: "cp jsvc {{ tomcat_instance_home }}/bin"
          args:
            chdir: "{{ daemon_src_dir }}"
            creates: "{{ daemon_bin }}"
          register: tomcat_daemon_install_result

        - name: clean native daemon extracted package
          file:
            path: "{{ daemon_src_dir }}"
            state: absent
      when: tomcat_daemon_extract_package_result.files is defined

    - name: install native daemon startup script on instances
      synchronize:
        src: "{{ tomcat_instance_home }}/{{ item }}"
        dest: "{{ tomcat_instance_base }}/{{ item }}"
        archive: true
      when: tomcat_daemon_install_result is changed
      loop: "{{ tomcat_daemon_scripts }}"
      delegate_to: "{{ inventory_hostname }}"

    - name: remove catalina scripts for native daemon based instances
      file:
        path: "{{ tomcat_instance_base }}/{{ item }}"
        state: absent
      loop: "{{ tomcat_daemon_scripts }}"
  when:
    - tomcat_instance_state in ["present", "started"]
    - tomcat_instance_use_native_daemon
    - tomcat_instannce_version is version("7", ">=")
  vars:
    instance_bin_dir: "{{ tomcat_instance_home }}/bin"
    daemon_bin: "{{ instance_bin_dir }}/jsvc"
    daemon_package:  >-
      {{ instance_bin_dir
         + "/"
         + "commons-daemon-native.tar.gz" }}
    daemon_src_dir: >-
      {{ instance_bin_dir
         + "/"
         + tomcat_daemon_extract_package_result.files
           | select("search", "README")
           | list
           | first
           | dirname
         + "/unix" }}
  tags:
    - role::tomcat
    - role::tomcat::install
    - role::tomcat::install::daemon
