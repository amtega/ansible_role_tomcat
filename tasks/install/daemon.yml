---
# Commons daemon install tasks

- block:
    - name: remove native daemon binary
      file:
        path: "{{ daemon_bin }}"
        state: absent
      when: >-
        tomcat_force_install
        or tomcat_use_native_daemon
           != ansible_local_facts.use_native_daemon | default(false)
        or tomcat_java_home
           != ansible_local_facts.java_home | default("")
      register: tomcat_daemon_remove_result
      vars:
        ansible_local_facts: >-
          {{ ansible_local["tomcat_" + tomcat_name] | default({}) }}

    - name: extract native daemon package
      unarchive:
        src: "{{ daemon_package }}"
        dest: "{{ tomcat_native_daemon_dir }}"
        copy: no
        owner: "{{ tomcat_user }}"
        group: "{{ tomcat_group }}"
        mode: "{{ tomcat_files_permissions }}"
        list_files: true
        creates: "{{ daemon_bin }}"
      register: tomcat_daemon_extract_package_result

    - block:
        - name: configure native daemon compilation
          shell: >-
            ./configure
            --with-java={{ tomcat_java_home }}
          args:
            chdir: "{{ daemon_src_dir }}"
            creates: "{{ daemon_bin }}"

        - name: compile native daemon
          shell: make
          args:
            chdir: "{{ daemon_src_dir }}"
            creates: "{{ daemon_bin }}"

        - name: install native daemon binary
          shell: "cp jsvc {{ tomcat_native_daemon_dir }}"
          args:
            chdir: "{{ daemon_src_dir }}"
            creates: "{{ daemon_bin }}"
          register: tomcat_daemon_install_result

        - name: clean native daemon extracted package
          file:
            path: "{{ daemon_src_dir }}"
            state: absent
      when: tomcat_daemon_extract_package_result.files is defined

    - name: install native daemon startup script
      synchronize:
        src: "{{ tomcat_home }}/{{ item }}"
        dest: "{{ tomcat_base }}/{{ item }}"
        archive: true
      when: tomcat_daemon_install_result is changed
      loop: "{{ tomcat_daemon_scripts }}"
      delegate_to: "{{ inventory_hostname }}"

    - name: remove catalina scripts
      file:
        path: "{{ tomcat_base }}/{{ item }}"
        state: absent
      loop: "{{ tomcat_catalina_scripts }}"
  when:
    - tomcat_state in ["present", "started"]
    - tomcat_use_native_daemon
    - tomcat_version is version("7", ">=")
  vars:
    bin_dir: "{{ tomcat_native_daemon_dir }}"
    daemon_bin: "{{ bin_dir }}/{{ tomcat_native_daemon_bin_filename }}"
    daemon_package:  >-
      {{ bin_dir
         + "/"
         + tomcat_native_daemon_package_filename }}
    daemon_src_dir: >-
      {{ bin_dir
         + "/"
         + tomcat_daemon_extract_package_result.files
           | select("search", "README")
           | list
           | first
           | dirname
         + "/unix" }}
  tags:
    - role::tomcat
    - role::tomcat::install
    - role::tomcat::install::daemon
