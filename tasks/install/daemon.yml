---
# Commons daemon install tasks

- block:
    - name: Remove native daemon binary
      file:
        path: "{{ daemon_path }}"
        state: absent
      when: >-
        tomcat_force_install | bool
        or tomcat_use_native_daemon | bool
           != ansible_local_facts.use_native_daemon
              | default(tomcat_use_native_daemon)
        or tomcat_java_home
           != ansible_local_facts.java_home
              | default(tomcat_java_home)
      notify:
          - restart tomcat
      vars:
        ansible_local_facts: >-
          {{ ansible_local[tomcat_name] | default({}) }}

    - name: Extract native daemon package
      unarchive:
        src: "{{ daemon_package }}"
        dest: "{{ tomcat_native_daemon_dir }}"
        copy: no
        owner: "{{ tomcat_user }}"
        group: "{{ tomcat_group }}"
        mode: "{{ tomcat_files_permissions }}"
        list_files: yes
        creates: "{{ daemon_path }}"
      register: tomcat_daemon_extract_package_result

    - block:
        - name: Configure native daemon compilation
          shell: >-
            ./configure
            --with-java={{ tomcat_java_home }}
          args:
            chdir: "{{ daemon_src_dir }}"
            creates: "{{ daemon_path }}"

        - name: Compile native daemon
          shell: make
          args:
            chdir: "{{ daemon_src_dir }}"
            creates: "{{ daemon_path }}"

        - name: Install native daemon binary
          copy:
            src: "{{ daemon_src_dir }}/jsvc"
            dest: "{{ tomcat_native_daemon_dir }}"
            owner: "{{ tomcat_user }}"
            group: "{{ tomcat_group }}"
            mode: "{{ tomcat_files_permissions }}"
            remote_src: yes
          notify:
            - restart tomcat

        - name: Clean native daemon extracted package
          file:
            path: "{{ daemon_extracted_dir }}"
            state: absent
      when: tomcat_daemon_extract_package_result.files is defined

    - name: Install native daemon startup script
      command: >-
        rsync --delay-updates -F --compress --archive --update
        '--out-format=<<CHANGED>>%i %n%L'
        {{ tomcat_home }}/{{ item }}
        {{ tomcat_base }}/{{ item }}
      args:
        warn: no
      register: tomcat_install_native_daemon_script_result
      changed_when: >-
        tomcat_install_native_daemon_script_result.stdout_lines | length > 0
      loop: "{{ tomcat_daemon_scripts }}"
      delegate_to: "{{ inventory_hostname }}"

    - name: Remove catalina scripts
      file:
        path: "{{ tomcat_base }}/{{ item }}"
        state: absent
      loop: "{{ tomcat_catalina_scripts }}"
  when:
    - tomcat_use_native_daemon | bool
    - tomcat_version is version("7", ">=")
  vars:
    daemon_path: >-
      {{ tomcat_native_daemon_dir }}/{{ tomcat_native_daemon_filename }}
    daemon_package:  >-
      {{ tomcat_home + "/bin/" + tomcat_native_daemon_package_filename }}

    daemon_extracted_dir: >-
      {{ tomcat_native_daemon_dir
         + "/"
         + tomcat_daemon_extract_package_result.files
           | select("search", "README")
           | list
           | first
           | dirname }}

    daemon_src_dir: "{{ daemon_extracted_dir }}/unix"
  tags:
    - role::tomcat
    - role::tomcat::install
    - role::tomcat::install::daemon
