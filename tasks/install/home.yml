---
# Home directory install tasks

- block:
    - name: Setup tomcat home directory
      file:
        path: "{{ tomcat_home }}"
        state: directory
        owner: "{{ tomcat_user }}"
        group: "{{ tomcat_group }}"
        mode: "{{ tomcat_files_permissions }}"
        recurse: yes

    - block:
        - name: Check tomcat home directory
          stat:
            path: "{{ tomcat_home }}/bin/catalina.sh"
          register: tomcat_home_check_result

        - name: Download tomcat artifact
          include_role:
            name: amtega.artifact
          vars:
            override:
              id: "tomcat_{{ tomcat_version_underlined }}"
              download: >-
                {{ not tomcat_home_check_result.stat.exists
                   or tomcat_force_install }}
            artifact: "{{ tomcat_artifact | combine(override) }}"

        - name: Extract tomcat server package
          unarchive:
            src: "{{ tomcat_package }}"
            dest: "{{ tomcat_home }}"
            copy: no
            owner: "{{ tomcat_user }}"
            group: "{{ tomcat_group }}"
            mode: "{{ tomcat_files_permissions }}"
            extra_opts:
              - "--strip-components=1"
          register: tomcat_extract_daemon_package_result
          when: not tomcat_home_check_result.stat.exists
      when: >-
        tomcat_version
        is not version(ansible_local_facts.version | default(0), "==")
        or tomcat_force_install
      vars:
        ansible_local_facts: >-
          {{ ansible_local[tomcat_name] | default({}) }}

    - name: Create tomcat home symlink
      file:
        src: "{{ tomcat_home }}"
        dest: "{{ tomcat_home_link }}"
        state: link
        mode: "{{ tomcat_files_permissions }}"
      when: tomcat_home_link is not none

    - name: Delete tomcat artifact
      file:
        path: "{{ tomcat_package }}"
        state: absent
      when:
        - tomcat_remove_artifact
        - artifact_result is defined

    - name: Setup tomcat home owner/group
      file:
        path: "{Ì£{ tomcat_home }}"
        owner: "{{ tomcat_user }}"
        group: "{{ tomcat_group }}"
        state: directory
      when: >-
        tomcat_user != ansible_local_facts.user | default(none)
        or tomcat_group != ansible_local_facts.group | default(none)
      vars:
        ansible_local_facts: >-
          {{ ansible_local[tomcat_name] | default({}) }}
  tags:
    - role::tomcat
    - role::tomcat::install
    - role::tomcat::install::home
