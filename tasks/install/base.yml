---
# Base directory install tasks

- block:
    - name: Setup tomcat base directory
      file:
        path: "{{ tomcat_base }}"
        state: directory
        owner: "{{ tomcat_user }}"
        group: "{{ tomcat_group }}"
        mode: "{{ tomcat_files_permissions }}"
      register: tomcat_create_base_result

    - name: Setup tomcat base directory tree
      file:
        path: "{{ tomcat_base }}/{{ item }}"
        state: directory
        owner: "{{ tomcat_user }}"
        group: "{{ tomcat_group }}"
        mode: "{{ tomcat_files_permissions }}"
      register: tomcat_create_base_tree_result
      loop: "{{ tomcat_subdirs }}"

    - name: Populate tomcat base directory tree
      command: >-
        rsync --delay-updates -F --compress --perms --owner --group \
        --recursive --links --update '--out-format=<<CHANGED>>%i %n%L' \
        {{ tomcat_home }}/{{ item }}/
        {{ tomcat_base }}/{{ item }}
      args:
        warn: no
      register: tomcat_populate_base_dir_result
      changed_when: tomcat_populate_base_dir_result.stdout_lines | length > 0
      loop: "{{ tomcat_subdirs_to_populate }}"

    - name: Create tomcat base symlink
      file:
        src: "{{ tomcat_base }}"
        dest: "{{ tomcat_base_link }}"
        state: link
        mode: "{{ tomcat_files_permissions }}"
      when: tomcat_base_link is not none

    - name: Create cluster directories
      file:
        path: "{{ tomcat_base }}/{{ item }}"
        state: directory
        owner: "{{ tomcat_user }}"
        group: "{{ tomcat_group }}"
        mode: "{{ tomcat_files_permissions }}"
      when: tomcat_cluster | bool
      loop: "{{ cluster_directories | reject('none') | list }}"
      vars:
        cluster_directories:
          - "{{ tomcat_cluster_deploy_temp_dir | default('null') }}"
          - "{{ tomcat_cluster_deploy_dir | default('null') }}"
          - "{{ tomcat_cluster_deploy_watch_dir | default('null') }}"

    - name: Setup tomcat base owner/group
      file:
        path: "{{ tomcat_base }}"
        owner: "{{ tomcat_user }}"
        group: "{{ tomcat_group }}"
        state: directory
      when: >-
        tomcat_user != ansible_local_facts.user | default(none)
        or tomcat_group != ansible_local_facts.group | default(none)
      vars:
        ansible_local_facts: >-
          {{ ansible_local[tomcat_name] | default({}) }}
  tags:
    - role::tomcat
    - role::tomcat::install
    - role::tomcat::install::base
