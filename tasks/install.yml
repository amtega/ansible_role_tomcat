---
# Role install tasks

- block:
    - block:
        - name: install required operating system packages
          package:
            name: "{{ item }}"
            state: present
          loop: >-
            {{ tomcat_packages[distribution] | default([]) }}

        - name: install required python packages
          pip:
            name: "{{ item }}"
            state: "latest"
          loop: >-
            {{ tomcat_packages_python[distribution] | default([]) }}
          environment: "{{ tomcat_http_proxy_environment }}"
      vars:
        distribution: >-
          {{ ansible_facts.distribution
             | lower
             + "_" + ansible_facts.distribution_major_version }}

    - name: setup instances groups
      group:
        name: "{{ instance.group | default(tomcat_instance_group) }}"
      loop: "{{ tomcat_instances }}"
      loop_control:
        loop_var: instance
        label: "{{ instance.name }}"

    - name: setup instances users
      user:
        name: "{{ instance.user | default(tomcat_instance_user) }}"
        group: "{{ instance.group | default(tomcat_instance_group) }}"
        home: /
      loop: "{{ tomcat_instances }}"
      loop_control:
        loop_var: instance
        label: "{{ instance.name }}"

    - block:
        - name: download instances tomcat tarball
          get_url:
            url: "{{ download_url }}"
            dest: >-
              {{ instance.download_path
                 | default(tomcat_instance_download_path) }}
          environment: "{{ tomcat_http_proxy_environment }}"
          loop: "{{ tomcat_instances }}"
          loop_control:
            loop_var: instance
            label: "{{ instance.name }}"

        - name: extract instances tomcat tarball
          unarchive:
            src: "{{ tarball }}"
            dest: "{{ dest }}"
            copy: no
            owner: "{{ instance.user | default(tomcat_instance_user) }}"
            group: "{{ instance.group | default(tomcat_instance_group) }}"
            mode: "{{ tomcat_files_permissions }}"
          loop: "{{ tomcat_instances }}"
          loop_control:
            loop_var: instance
            label: "{{ instance.name }}"
          vars:
            dest: "{{ instance.base | default(tomcat_instance_base) }}"
            tarball: >-
              {{ instance.download_path
                 | default(tomcat_instance_download_path)
                 + "/"
                 + download_tarball }}

        - name: create instances bases symlinks
          file:
            src: "{{ instance_base }}"
            dest: "{{ instance.link }}"
            state: link
            mode: "{{ tomcat_files_permissions }}"
          loop: "{{ tomcat_instances | selectattr('link', 'defined') | list }}"
          loop_control:
            loop_var: instance
            label: "{{ instance.name }}"
          vars:
            instance_base: >-
              {{ instance.base | default(tomcat_instance_base)
                 + "/apache-tomcat-"
                 + instance.version }}
      when: >-
        ansible_local.tomcat is undefined
        or instance.version is not version(ansible_local.tomcat.version, "==")
      vars:
        version_major: >-
          {{ instance.version
             | regex_replace("([0-9]+)\.([0-9]+)\.([0-9]+)", "\1") }}
        dist_url: >-
          {{ instance.download_mirror
             | default(tomcat_instance_download_mirror)
             ~ "/dist/tomcat"
             ~ "/tomcat-"
             ~ version_major
             ~ "/v"
             ~ instance.version
             ~ "/bin" }}
        download_tarball: >-
          {{ "apache-tomcat-"
             ~ instance.version
             ~ ".tar.gz" }}
        download_url: >-
          {{ (instance.download_url is defined)
             | ternary(instance.download_url, dist_url)
               + "/"
               + download_tarball }}

    - name: delete tomcat instances downloaded tarballs
      file:
        path: "{{ downloaded_tarball }}"
        state: absent
      loop: >-
        {{ tomcat_instances
           | selectattr("remove_download", "defined")
           | selectattr("remove_download", "equalto", true)
           | list
           + (tomcat_instance_remove_download)
             | ternary(tomcat_instances
                       | selectattr("remove_download", "undefined")
                       | list,
                       []) }}
      loop_control:
        loop_var: instance
        label: "{{ instance.name }}"
      vars:
        downloaded_tarball: >-
          {{ instance.download_path
             | default(tomcat_instance_download_path)
             ~ "/"
             ~ "apache-tomcat-"
             ~ instance.version
             ~ ".tar.gz" }}

    - block:
        - name: create instances directory tree
          file:
            path: "{{ instance_home }}/{{ item.1 }}"
            state: directory
            owner: "{{ item.0.user | default(tomcat_instance_user) }}"
            group: "{{ item.0.group | default(tomcat_instance_group) }}"
            mode: "{{ tomcat_files_permissions }}"
          register: tomcat_create_instances_tree_result
          loop: "{{ query('nested', tomcat_instances, subdirs) }}"
          loop_control:
            label: "{{ instance.name }}/{{ item.1 }}"
          vars:
            subdirs:
              - bin
              - conf
              - lib
              - logs
              - temp
              - webapps
              - work

        - name: prepare instances directories
          synchronize:
            src: >-
              {{ item.0.base
                 | default(tomcat_instance_base)
                 + "/apache-tomcat-"
                 + item.0.version)
                 + "/"
                 + item.1.src }}
            dest: >-
              {{ instance_home
                 + "/"
                 + item.1.dest | default(item.1.src) }}
            archive: true
          loop: "{{ query('nested', tomcat_instances, subdirs) }}"
          loop_control:
            label: "{{ item.0.name }} {{ item.1.src }}"
          vars:
            subdirs:
              - src: conf/
                dest: conf
              - src: bin/catalina.sh
              - src: bin/startup.sh
              - src: bin/shutdown.sh
          when: tomcat_create_instances_tree_result is changed
          delegate_to: "{{ inventory_hostname }}"
      vars:
        instance_home: >-
          {{ item.0.home
             | default(tomcat_instance_home)
               + "/"
               + item.0.name) }}

    - name: create custom facts directory
      file:
        path: /etc/ansible/facts.d
        state: "directory"
  tags:
    - role::tomcat
    - role::tomcat::install
