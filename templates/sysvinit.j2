{{ ansible_managed | comment }}

#!/bin/bash
#
# {{ tomcat_instance_name }}  Start up the instance of Tomcat Server
#
# chkconfig: 2345 55 25
# description: Tomcat is a JEE application container. \
#              This service starts up the instance {{ tomcat_instance_name }}.

### BEGIN INIT INFO
# Provides: {{ tomcat_instance_name }}
# Required-Start: $local_fs $network
# Required-Stop: $local_fs $syslog
# Should-Start: $syslog
# Should-Stop: $network $syslog
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Start up the Tomcat instance {{ tomcat_instance_name }}
# Description:       Tomcat is a JEE application container.
#                    This service starts up the instance {{ tomcat_instance_name }}.
### END INIT INFO

# source function library
. /etc/rc.d/init.d/functions

prog="{{ tomcat_instance_name }}"
user="{{ tomcat_instance_user }}"

{% if tomcat_instance_use_native_daemon
      and tomcat_instance_version is version("7", ">=") %}
export JAVA_HOME={{ tomcat_instance_java_home }}
export CATALINA_HOME={{ tomcat_instance_home }}
export CATALINA_BASE={{ tomcat_instance_base }}
{% endif %}

PID_FILE="{{ tomcat_instance_base }}/{{ tomcat_instance_pid_file }}"

start()
{
        echo -n $"Starting $prog: "
{% if omcat_instance_use_native_daemon
      and tomcat_instance_version is version("7", ">=") %}
        su $user {{ tomcat_instance_base }}/bin/daemon.sh start && success > /dev/null || failure
{% else %}
        su $user {{ tomcat_instance_base }}/bin/startup.sh && success > /dev/null || failure
{% endif %}
        RETVAL=$?
        echo
        return $RETVAL
}

stop()
{
        echo -n $"Stopping $prog: "
{% if tomcat_instance_use_native_daemon
      and tomcat_instance_version is version("7", ">=") %}
        su $user {{ tomcat_instance_base }}/bin/daemon.sh stop > /dev/null
{% else %}
        su $user {{ tomcat_instance_base }}/bin/shutdown.sh > /dev/null
{% endif %}
        RETVAL=$?
        rm -Rf $PID_FILE
        echo
        return $RETVAL
}

restart() {
        stop
        start
}

rh_status() {
        status -p $PID_FILE $prog
}

rh_status_q() {
        rh_status >/dev/null 2>&1
}

case "$1" in
        start)
                rh_status_q && exit 0
                start
                ;;
        stop)
                if ! rh_status_q; then
                        exit 0
                fi
                stop
                ;;
        restart)
                restart
                ;;
        status)
                rh_status
                RETVAL=$?
                ;;
        *)
                echo $"Usage: $0 {start|stop|restart|status}"
                RETVAL=2
esac
exit $RETVAL
